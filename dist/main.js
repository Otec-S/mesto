(()=>{"use strict";var __webpack_modules__={831:()=>{eval('\n;// CONCATENATED MODULE: ./src/scripts/utils.js\n// ПЕРЕМЕННЫЕ ДЛЯ POPUP PROFILE\nvar popUpProfile = document.querySelector(\'.popup-profile\');\nvar editButton = document.querySelector(\'.profile__edit-button\');\n// уже имеющиеся в профиле имя и статус\nvar currentName = document.querySelector(\'.profile__title\');\nvar currentStatus = document.querySelector(\'.profile__subtitle\');\n//текущий аватар\nvar currentAvatar = document.querySelector(\'.profile__avatar\');\n//имя и статус в формах для заполнения попапа\nvar nameInput = popUpProfile.querySelector(".popup__input_type_name");\nvar nameStatus = popUpProfile.querySelector(".popup__input_type_status");\n//ссылка на поле для ввода нового адреса нового аватара\nvar avatarLink = document.querySelector(\'.profile__avatar-link\');\n\n// ПЕРЕМЕННЫЕ ДЛЯ POPUP NEW CARD\nvar addButton = document.querySelector(\'.profile__add-button\');\n\n// ПЕРЕМЕННЫЕ ДЛЯ ВАЛИДАЦИИ ФОРМ\nvar config = {\n  formSelector: \'.popup__form\',\n  inputSelector: \'.popup__input\',\n  submitButtonSelector: \'.popup__submit\',\n  inactiveButtonClass: \'popup__submit_disabled\',\n  inputErrorClass: \'popup__input_invalid\'\n};\n\n//ФУНКЦИИ\n//делает видимой мусорную корзинку\nfunction makeTrashCanVisible(element) {\n  element.querySelector(\'.card__trash-can\').classList.remove(\'card__trash-can_inactive\');\n}\n\n//делает черным/активным сердечко для лайков\nfunction makeHeartToLikeActive(element) {\n  element.querySelector(\'.card__heart\').classList.add(\'card__heart_active\');\n}\n;// CONCATENATED MODULE: ./src/components/Card.js\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Card = /*#__PURE__*/function () {\n  //принимаем данные из объекта\n  function Card(cardData, _ref, _ref2, _ref3, _ref4) {\n    var handleCardClick = _ref.handleCardClick;\n    var confirmDelete = _ref2.confirmDelete;\n    var putHeartToLike = _ref3.putHeartToLike;\n    var deleteHeartToLike = _ref4.deleteHeartToLike;\n    var templateSelector = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : \'.card-template\';\n    _classCallCheck(this, Card);\n    this._name = cardData.name;\n    this._link = cardData.link;\n    this._templateSelector = templateSelector;\n    this._handleCardClick = handleCardClick;\n    this._confirmDelete = confirmDelete;\n    this.putHeartToLike = putHeartToLike;\n    this.deleteHeartToLike = deleteHeartToLike;\n  }\n  _createClass(Card, [{\n    key: "_getTemplate",\n    value: function _getTemplate() {\n      //клонируем узел с карточкой из шаблона\n      var cardElement = document.querySelector(this._templateSelector).content.querySelector(\'.card\').cloneNode(true);\n      return cardElement;\n    }\n\n    //метод возвращает ссылку на сердечко в разметке карточки\n  }, {\n    key: "showHeartToLike",\n    value: function showHeartToLike() {\n      return this._element.querySelector(\'.card__heart\');\n    }\n  }, {\n    key: "_handleHeartToLike",\n    value: function _handleHeartToLike() {\n      if (this._heart.classList.contains(\'card__heart_active\')) {\n        this.deleteHeartToLike();\n      } else {\n        this.putHeartToLike();\n      }\n    }\n\n    //метод возвращает ссылку на счетчик лайков в разметке карточки\n  }, {\n    key: "showLikesCounter",\n    value: function showLikesCounter() {\n      return this._element.querySelector(\'.card__hearts-counter\');\n    }\n\n    //метод возвращает ссылку на мусорную корзину в разметке карточки\n  }, {\n    key: "showTrashCan",\n    value: function showTrashCan() {\n      return this._element.querySelector(\'.card__trash-can\');\n    }\n  }, {\n    key: "handleTrashCanToRemoveCard",\n    value: function handleTrashCanToRemoveCard() {\n      this._element.remove();\n      this._element = null;\n    }\n  }, {\n    key: "_confirmToRemoveCard",\n    value: function _confirmToRemoveCard() {\n      this._confirmDelete();\n    }\n  }, {\n    key: "_handleClick",\n    value: function _handleClick() {\n      this._handleCardClick({\n        name: this._name,\n        link: this._link\n      });\n    }\n  }, {\n    key: "_setEventListeners",\n    value: function _setEventListeners() {\n      var _this = this;\n      //вешаем на сердечко вызов функции по клику\n      this._heart = this.showHeartToLike();\n      this._heart.addEventListener(\'click\', function () {\n        _this._handleHeartToLike();\n      });\n\n      // слушатель на корзину удаления карточки\n      this.showTrashCan().addEventListener("click", function () {\n        _this._confirmToRemoveCard();\n      });\n\n      //слушатель при нажатии на фотокарточку - просто вызываем функцию _clickToCard\n      this._element.querySelector(\'.card__link\').addEventListener(\'click\', function () {\n        _this._handleClick();\n      });\n    }\n\n    //публичный метод для создания карточки\n  }, {\n    key: "generateCard",\n    value: function generateCard() {\n      //ссылка на клонированный узел шаблона из html\n      this._element = this._getTemplate();\n      //навешиваем все слушатели\n      this._setEventListeners();\n      //название карточки - элемент name из объекта cardData\n      this._element.querySelector(".card__title").textContent = this._name;\n      //url карточки - элемент link из объекта cardData\n      this._element.querySelector(".card__photo").src = this._link;\n      //alt карточки - элемент name из объекта cardData\n      this._element.querySelector(".card__photo").alt = this._name;\n      //возвращаем готовую карточку\n      return this._element;\n    }\n  }]);\n  return Card;\n}();\n\n;// CONCATENATED MODULE: ./src/components/Section.js\nfunction Section_typeof(obj) { "@babel/helpers - typeof"; return Section_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Section_typeof(obj); }\nfunction Section_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Section_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Section_toPropertyKey(descriptor.key), descriptor); } }\nfunction Section_createClass(Constructor, protoProps, staticProps) { if (protoProps) Section_defineProperties(Constructor.prototype, protoProps); if (staticProps) Section_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Section_toPropertyKey(arg) { var key = Section_toPrimitive(arg, "string"); return Section_typeof(key) === "symbol" ? key : String(key); }\nfunction Section_toPrimitive(input, hint) { if (Section_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Section_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n//отвечает за отрисовку элементов на странице\n//items — это массив данных, которые нужно добавить на страницу при инициализации класса\n//renderer — это функция, которая отвечает за создание и отрисовку данных на странице\n//containerSelector - селектор контейнера, в который нужно добавлять созданные элементы\nvar Section = /*#__PURE__*/function () {\n  function Section(_ref, containerSelector) {\n    var items = _ref.items,\n      renderer = _ref.renderer;\n    Section_classCallCheck(this, Section);\n    this._renderedItems = items;\n    this._renderer = renderer;\n    this._container = document.querySelector(containerSelector);\n  }\n\n  //cодержит публичный метод addItem, который принимает DOM-элемент и добавляет его в контейнер.\n  Section_createClass(Section, [{\n    key: "addItem",\n    value: function addItem(element) {\n      this._container.prepend(element);\n    }\n\n    //отрисовка массива карточек\n  }, {\n    key: "renderItems",\n    value: function renderItems() {\n      var _this = this;\n      this._renderedItems.forEach(function (item) {\n        _this._renderer(item);\n      });\n    }\n  }]);\n  return Section;\n}();\n\n;// CONCATENATED MODULE: ./src/components/Popup.js\nfunction Popup_typeof(obj) { "@babel/helpers - typeof"; return Popup_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Popup_typeof(obj); }\nfunction Popup_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Popup_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Popup_toPropertyKey(descriptor.key), descriptor); } }\nfunction Popup_createClass(Constructor, protoProps, staticProps) { if (protoProps) Popup_defineProperties(Constructor.prototype, protoProps); if (staticProps) Popup_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Popup_toPropertyKey(arg) { var key = Popup_toPrimitive(arg, "string"); return Popup_typeof(key) === "symbol" ? key : String(key); }\nfunction Popup_toPrimitive(input, hint) { if (Popup_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Popup_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Popup = /*#__PURE__*/function () {\n  function Popup(popupSelector) {\n    Popup_classCallCheck(this, Popup);\n    //делаю ссылку на popup с большим фото\n    this._popup = document.querySelector(popupSelector);\n    //прибиваем контексты к this\n    this._handleEscClose = this._handleEscClose.bind(this);\n    this._closePopUpByClickToOverlay = this._closePopUpByClickToOverlay.bind(this);\n    this.close = this.close.bind(this);\n    this.open = this.open.bind(this);\n    //ссылка на крестик закрытия попапа\n    this._crossToClose = this._popup.querySelector(\'.popup__close-cross\');\n    //ссылка на кнопку отправки формы\n    this._submitButton = this._popup.querySelector(\'.popup__submit\');\n  }\n\n  // публичный метод открывает окно попап\n  Popup_createClass(Popup, [{\n    key: "open",\n    value: function open() {\n      this._popup.classList.add(\'popup_opened\');\n      // вешаем слушатель функции на эскейп на этот элемент\n      document.addEventListener(\'keydown\', this._handleEscClose);\n      document.addEventListener(\'mousedown\', this._closePopUpByClickToOverlay);\n    }\n\n    // публичный метод закрывает окно попап\n  }, {\n    key: "close",\n    value: function close() {\n      this._popup.classList.remove(\'popup_opened\');\n      // удаляем слушатель функции на эскейп с этого элемента\n      document.removeEventListener(\'keydown\', this._handleEscClose);\n      document.removeEventListener(\'mousedown\', this._closePopUpByClickToOverlay);\n    }\n\n    //приватный метод закрытия popup по клику на escape\n  }, {\n    key: "_handleEscClose",\n    value: function _handleEscClose(evt) {\n      if (evt.key === \'Escape\') {\n        this.close();\n      }\n    }\n\n    //приватный метод закрытия popup по клику на overlay\n  }, {\n    key: "_closePopUpByClickToOverlay",\n    value: function _closePopUpByClickToOverlay(evt) {\n      if (evt.target.classList.contains(\'popup_opened\')) {\n        this.close();\n      }\n    }\n\n    //на период выполнения Response меняет текст на кнопках отправки форм\n  }, {\n    key: "renderLoading",\n    value: function renderLoading(isLoading) {\n      if (isLoading) {\n        this.normalButtonText = this._submitButton.textContent;\n        this._normalButtonBackgroundColor = this._submitButton.style.backgroundColor;\n        this._normalButtonTextColor = this._submitButton.style.color;\n        this._submitButton.textContent = "Сохранение...";\n        this._submitButton.style.backgroundColor = \'black\';\n        this._submitButton.style.color = \'white\';\n      } else {\n        this._submitButton.textContent = this.normalButtonText;\n        this._submitButton.style.backgroundColor = this._normalButtonBackgroundColor;\n        this._submitButton.style.color = this._normalButtonTextColor;\n      }\n    }\n  }, {\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      // слушатель клика иконке (крестику) закрытия попапа.\n      this._crossToClose.addEventListener(\'click\', this.close);\n    }\n  }]);\n  return Popup;\n}();\n\n;// CONCATENATED MODULE: ./src/components/PopupWithImage.js\nfunction PopupWithImage_typeof(obj) { "@babel/helpers - typeof"; return PopupWithImage_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithImage_typeof(obj); }\nfunction PopupWithImage_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithImage_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupWithImage_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupWithImage_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithImage_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithImage_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithImage_toPropertyKey(arg) { var key = PopupWithImage_toPrimitive(arg, "string"); return PopupWithImage_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupWithImage_toPrimitive(input, hint) { if (PopupWithImage_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupWithImage_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (PopupWithImage_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar PopupWithImage = /*#__PURE__*/function (_Popup) {\n  _inherits(PopupWithImage, _Popup);\n  var _super = _createSuper(PopupWithImage);\n  //наследуется от Popup, вызывает его конструктор, в который передает нужный параметр - смотреть в сторону super.\n  function PopupWithImage(popupSelector) {\n    var _this;\n    PopupWithImage_classCallCheck(this, PopupWithImage);\n    _this = _super.call(this, popupSelector);\n    //делаю ссылку на <img> в попапе BIG PHOTO\n    _this._image = _this._popup.querySelector(\'.popup__big-photo-picture\');\n    //делаю ссылку на <figurecaption> в этом попапе BIG PHOTO\n    _this._caption = _this._popup.querySelector(\'.popup__big-photo-caption\');\n    return _this;\n  }\n  PopupWithImage_createClass(PopupWithImage, [{\n    key: "open",\n    value: function open(cardData) {\n      this._image.src = cardData.link;\n      this._caption.textContent = cardData.name;\n      this._image.alt = cardData.name;\n      _get(_getPrototypeOf(PopupWithImage.prototype), "open", this).call(this);\n    }\n  }]);\n  return PopupWithImage;\n}(Popup);\n\n;// CONCATENATED MODULE: ./src/components/PopupWithForm.js\nfunction PopupWithForm_typeof(obj) { "@babel/helpers - typeof"; return PopupWithForm_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithForm_typeof(obj); }\nfunction PopupWithForm_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithForm_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupWithForm_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupWithForm_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithForm_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithForm_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithForm_toPropertyKey(arg) { var key = PopupWithForm_toPrimitive(arg, "string"); return PopupWithForm_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupWithForm_toPrimitive(input, hint) { if (PopupWithForm_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupWithForm_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction PopupWithForm_get() { if (typeof Reflect !== "undefined" && Reflect.get) { PopupWithForm_get = Reflect.get.bind(); } else { PopupWithForm_get = function _get(target, property, receiver) { var base = PopupWithForm_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return PopupWithForm_get.apply(this, arguments); }\nfunction PopupWithForm_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = PopupWithForm_getPrototypeOf(object); if (object === null) break; } return object; }\nfunction PopupWithForm_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) PopupWithForm_setPrototypeOf(subClass, superClass); }\nfunction PopupWithForm_setPrototypeOf(o, p) { PopupWithForm_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return PopupWithForm_setPrototypeOf(o, p); }\nfunction PopupWithForm_createSuper(Derived) { var hasNativeReflectConstruct = PopupWithForm_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = PopupWithForm_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = PopupWithForm_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return PopupWithForm_possibleConstructorReturn(this, result); }; }\nfunction PopupWithForm_possibleConstructorReturn(self, call) { if (call && (PopupWithForm_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return PopupWithForm_assertThisInitialized(self); }\nfunction PopupWithForm_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction PopupWithForm_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction PopupWithForm_getPrototypeOf(o) { PopupWithForm_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return PopupWithForm_getPrototypeOf(o); }\n\nvar PopupWithForm = /*#__PURE__*/function (_Popup) {\n  PopupWithForm_inherits(PopupWithForm, _Popup);\n  var _super = PopupWithForm_createSuper(PopupWithForm);\n  function PopupWithForm(popupSelector, submitForm) {\n    var _this;\n    PopupWithForm_classCallCheck(this, PopupWithForm);\n    _this = _super.call(this, popupSelector);\n    //Кроме селектора попапа принимает в конструктор колбэк сабмита формы\n    _this._submitForm = submitForm;\n    //общая ссылка на форму из попапа (есть в обеих формах)\n    _this._formElement = _this._popup.querySelector(\'.popup__form\');\n    return _this;\n  }\n  PopupWithForm_createClass(PopupWithForm, [{\n    key: "_getInputValues",\n    value: function _getInputValues() {\n      var _this2 = this;\n      //делаем массив всех значений полей текущей формы\n      this._inputsFromForm = Array.from(this._formElement.querySelectorAll(\'.popup__input\'));\n      //создаем пустой объект\n      this._cardData = {};\n      //наполняем объект данными с всем полей-инпутов текущей формы\n      this._inputsFromForm.forEach(function (input) {\n        _this2._cardData[input.name] = input.value;\n      });\n      //возвращаем полученный объект c полями name и link\n      return this._cardData;\n    }\n  }, {\n    key: "close",\n    value: function close() {\n      this._formElement.reset();\n      PopupWithForm_get(PopupWithForm_getPrototypeOf(PopupWithForm.prototype), "close", this).call(this);\n    }\n  }, {\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      var _this3 = this;\n      PopupWithForm_get(PopupWithForm_getPrototypeOf(PopupWithForm.prototype), "setEventListeners", this).call(this);\n      //универсальный обработчик клика по кнопке для обоих попапов\n      //по нему должна вызываться функция, переданная в колбэк, в которую передается this._cardData\n      this._formElement.addEventListener(\'submit\', function (evt) {\n        evt.preventDefault();\n        _this3._submitForm(_this3._getInputValues());\n      });\n    }\n  }]);\n  return PopupWithForm;\n}(Popup);\n\n;// CONCATENATED MODULE: ./src/components/PopupWithConfirmation.js\nfunction PopupWithConfirmation_typeof(obj) { "@babel/helpers - typeof"; return PopupWithConfirmation_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithConfirmation_typeof(obj); }\nfunction PopupWithConfirmation_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithConfirmation_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupWithConfirmation_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupWithConfirmation_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithConfirmation_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithConfirmation_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithConfirmation_toPropertyKey(arg) { var key = PopupWithConfirmation_toPrimitive(arg, "string"); return PopupWithConfirmation_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupWithConfirmation_toPrimitive(input, hint) { if (PopupWithConfirmation_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupWithConfirmation_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction PopupWithConfirmation_get() { if (typeof Reflect !== "undefined" && Reflect.get) { PopupWithConfirmation_get = Reflect.get.bind(); } else { PopupWithConfirmation_get = function _get(target, property, receiver) { var base = PopupWithConfirmation_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return PopupWithConfirmation_get.apply(this, arguments); }\nfunction PopupWithConfirmation_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = PopupWithConfirmation_getPrototypeOf(object); if (object === null) break; } return object; }\nfunction PopupWithConfirmation_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) PopupWithConfirmation_setPrototypeOf(subClass, superClass); }\nfunction PopupWithConfirmation_setPrototypeOf(o, p) { PopupWithConfirmation_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return PopupWithConfirmation_setPrototypeOf(o, p); }\nfunction PopupWithConfirmation_createSuper(Derived) { var hasNativeReflectConstruct = PopupWithConfirmation_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = PopupWithConfirmation_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = PopupWithConfirmation_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return PopupWithConfirmation_possibleConstructorReturn(this, result); }; }\nfunction PopupWithConfirmation_possibleConstructorReturn(self, call) { if (call && (PopupWithConfirmation_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return PopupWithConfirmation_assertThisInitialized(self); }\nfunction PopupWithConfirmation_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction PopupWithConfirmation_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction PopupWithConfirmation_getPrototypeOf(o) { PopupWithConfirmation_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return PopupWithConfirmation_getPrototypeOf(o); }\n\nvar PopupWithConfirmation = /*#__PURE__*/function (_Popup) {\n  PopupWithConfirmation_inherits(PopupWithConfirmation, _Popup);\n  var _super = PopupWithConfirmation_createSuper(PopupWithConfirmation);\n  function PopupWithConfirmation(popupSelector) {\n    var _this;\n    PopupWithConfirmation_classCallCheck(this, PopupWithConfirmation);\n    _this = _super.call(this, popupSelector);\n    //ссылка на кнопку "ДА"\n    _this.confirmDeleteCard = _this._popup.querySelector(\'.popup__submit\');\n    return _this;\n  }\n  PopupWithConfirmation_createClass(PopupWithConfirmation, [{\n    key: "handleSubmitCallback",\n    value: function handleSubmitCallback(action) {\n      this.submitCallback = action;\n    }\n  }, {\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      var _this2 = this;\n      PopupWithConfirmation_get(PopupWithConfirmation_getPrototypeOf(PopupWithConfirmation.prototype), "setEventListeners", this).call(this);\n      this.confirmDeleteCard.addEventListener(\'click\', function () {\n        return _this2.submitCallback();\n      });\n    }\n  }]);\n  return PopupWithConfirmation;\n}(Popup);\n\n;// CONCATENATED MODULE: ./src/components/UserInfo.js\nfunction UserInfo_typeof(obj) { "@babel/helpers - typeof"; return UserInfo_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, UserInfo_typeof(obj); }\nfunction UserInfo_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction UserInfo_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, UserInfo_toPropertyKey(descriptor.key), descriptor); } }\nfunction UserInfo_createClass(Constructor, protoProps, staticProps) { if (protoProps) UserInfo_defineProperties(Constructor.prototype, protoProps); if (staticProps) UserInfo_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction UserInfo_toPropertyKey(arg) { var key = UserInfo_toPrimitive(arg, "string"); return UserInfo_typeof(key) === "symbol" ? key : String(key); }\nfunction UserInfo_toPrimitive(input, hint) { if (UserInfo_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (UserInfo_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n//принимает на вход имя и статус\nvar UserInfo = /*#__PURE__*/function () {\n  function UserInfo(name, about) {\n    UserInfo_classCallCheck(this, UserInfo);\n    this._userName = name;\n    this._userStatus = about;\n  }\n  //создает объект, в который записываем принятые в объект имя и статус\n  UserInfo_createClass(UserInfo, [{\n    key: "getUserInfo",\n    value: function getUserInfo() {\n      var currentUserInfo = {\n        name: this._userName.textContent,\n        about: this._userStatus.textContent\n      };\n      return currentUserInfo;\n    }\n    //принимает !объект!, значения которого записывает в принятые в конструтор класса UserInfo имя и статус\n    //то есть связывает принятые в класс значания со значениями, принятыми в метод setUserInfo\n  }, {\n    key: "setUserInfo",\n    value: function setUserInfo(userInfo) {\n      this._userName.textContent = userInfo.name;\n      this._userStatus.textContent = userInfo.about;\n    }\n  }]);\n  return UserInfo;\n}();\n\n;// CONCATENATED MODULE: ./src/components/FormValidator.js\nfunction FormValidator_typeof(obj) { "@babel/helpers - typeof"; return FormValidator_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, FormValidator_typeof(obj); }\nfunction FormValidator_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction FormValidator_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, FormValidator_toPropertyKey(descriptor.key), descriptor); } }\nfunction FormValidator_createClass(Constructor, protoProps, staticProps) { if (protoProps) FormValidator_defineProperties(Constructor.prototype, protoProps); if (staticProps) FormValidator_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction FormValidator_toPropertyKey(arg) { var key = FormValidator_toPrimitive(arg, "string"); return FormValidator_typeof(key) === "symbol" ? key : String(key); }\nfunction FormValidator_toPrimitive(input, hint) { if (FormValidator_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (FormValidator_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar FormValidator = /*#__PURE__*/function () {\n  function FormValidator(config, currentCheckingForm) {\n    FormValidator_classCallCheck(this, FormValidator);\n    this._formSelector = config.formSelector;\n    this._inputSelector = config.inputSelector;\n    this._submitButtonSelector = config.submitButtonSelector;\n    this._inactiveButtonClass = config.inactiveButtonClass;\n    this._inputErrorClass = config.inputErrorClass;\n    this._currentCheckingForm = currentCheckingForm;\n\n    //делаем ссылку на переданную в конструктор форму\n    this._formElement = document.querySelector(this._currentCheckingForm);\n\n    //проходимся по текущей форме и делаем массив inputList из всех инпутов текущей формы\n    this._inputList = Array.from(this._formElement.querySelectorAll(this._inputSelector));\n\n    //ссылка на кнопку текушего formElement\n    this._buttonElement = this._formElement.querySelector(this._submitButtonSelector);\n  }\n  FormValidator_createClass(FormValidator, [{\n    key: "enableValidation",\n    value: function enableValidation(config) {\n      var _this = this;\n      //проверка состояния кнопки при первой загрузке страницы.\n      this._toggleButtonState(config, this._inputList, this._buttonElement);\n\n      //чистим форму после ее отправки и тут же проверяем кнопку на валидность, делая ее невалидной\n      this._formElement.addEventListener(\'submit\', function () {\n        _this._formElement.reset();\n        _this._toggleButtonState(config, _this._inputList, _this._buttonElement);\n      });\n\n      //проходим по массиву всех инпутов inputList\n      this._inputList.forEach(function (inputElement) {\n        //вешаем на каждый input слушатель ввода\n        inputElement.addEventListener(\'input\', function () {\n          //вызываем функцию checkInputValidity\n          _this._checkInputValidity(config, _this._formElement, inputElement);\n          //вызываем функцию toggleButtonState в теле обработчика события input. Передаём ей массив полей формы и элемент кнопки. Такой вызов проверит состояние кнопки при каждом изменении символа в любом из полей.\n          _this._toggleButtonState(config, _this._inputList, _this._buttonElement);\n        });\n      });\n    }\n  }, {\n    key: "_checkInputValidity",\n    value:\n    //ВАЛИДАЦИЯ ПОЛЕЙ ВВОДА\n    //функция вызывает показ ошибок при невалидации\n    function _checkInputValidity(config, formElement, inputElement) {\n      if (!inputElement.validity.valid) {\n        this._showInputError(config, this._formElement, inputElement, inputElement.validationMessage);\n      } else {\n        this._hideInputError(config, this._formElement, inputElement);\n      }\n    }\n  }, {\n    key: "_showInputError",\n    value:\n    //показываем невалидное состаяние\n    function _showInputError(config, formElement, inputElement, errorMessage) {\n      var errorElement = this._formElement.querySelector("#error-".concat(inputElement.id));\n      inputElement.classList.add(config.inputErrorClass);\n      errorElement.textContent = errorMessage;\n      // errorElement.classList.add(\'form__input-error_active\');\n    }\n  }, {\n    key: "_hideInputError",\n    value:\n    //показываем валидное состаяние\n    function _hideInputError(config, formElement, inputElement) {\n      var errorElement = this._formElement.querySelector("#error-".concat(inputElement.id));\n      inputElement.classList.remove(config.inputErrorClass);\n      // errorElement.classList.remove(\'form__input-error_active\');\n      errorElement.textContent = \'\';\n    }\n  }, {\n    key: "_hasInvalidInput",\n    value:\n    //ВАЛИДАЦИЯ КНОПОК ОТПРАВКИ\n    //функция переключения состояния кнопки\n\n    // Если поле не валидно, колбэк вернёт true\n    // Обход массива прекратится и вся функция\n    // hasInvalidInput вернёт true\n    function _hasInvalidInput(inputList) {\n      return this._inputList.some(function (inputElement) {\n        return !inputElement.validity.valid;\n      });\n    }\n  }, {\n    key: "_toggleButtonState",\n    value:\n    //функция переключения состояния кнопок отправки\n    // Первый параметр — массив полей, второй — кнопка.\n    function _toggleButtonState(config, inputList, buttonElement) {\n      if (this._hasInvalidInput(this._inputList)) {\n        // сделай кнопку неактивной\n        this._buttonElement.setAttribute(\'disabled\', \'\');\n        this._buttonElement.classList.add(config.inactiveButtonClass);\n      } else {\n        // иначе сделай кнопку активной\n        this._buttonElement.removeAttribute(\'disabled\');\n        this._buttonElement.classList.remove(config.inactiveButtonClass);\n      }\n    }\n  }]);\n  return FormValidator;\n}();\n;\n\n;// CONCATENATED MODULE: ./src/components/Api.js\nfunction Api_typeof(obj) { "@babel/helpers - typeof"; return Api_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Api_typeof(obj); }\nfunction Api_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Api_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Api_toPropertyKey(descriptor.key), descriptor); } }\nfunction Api_createClass(Constructor, protoProps, staticProps) { if (protoProps) Api_defineProperties(Constructor.prototype, protoProps); if (staticProps) Api_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Api_toPropertyKey(arg) { var key = Api_toPrimitive(arg, "string"); return Api_typeof(key) === "symbol" ? key : String(key); }\nfunction Api_toPrimitive(input, hint) { if (Api_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Api_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Api = /*#__PURE__*/function () {\n  function Api(config) {\n    Api_classCallCheck(this, Api);\n    this._url = config.url;\n    this._headers = config.headers;\n    this._authorization = config.headers.authorization;\n  }\n\n  //вспомогательный метод\n  Api_createClass(Api, [{\n    key: "_handleResponse",\n    value: function _handleResponse(res) {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: ".concat(res.status));\n      }\n    }\n  }, {\n    key: "getCards",\n    value: function getCards() {\n      return fetch("".concat(this._url, "/cards"), {\n        headers: {\n          authorization: this._authorization,\n          \'Content-type\': \'application/json\'\n        }\n      }).then(this._handleResponse);\n    }\n\n    //отправляет запрос на добавление карточки на сервер\n  }, {\n    key: "setCard",\n    value: function setCard(newCardName, newCardLink) {\n      return fetch("".concat(this._url, "/cards"), {\n        method: \'POST\',\n        headers: {\n          authorization: this._authorization,\n          \'Content-type\': \'application/json\'\n        },\n        body: JSON.stringify({\n          name: newCardName,\n          link: newCardLink\n        })\n      }).then(this._handleResponse);\n    }\n  }, {\n    key: "getUserId",\n    value: function getUserId() {\n      return fetch("".concat(this._url, "/users/me"), {\n        headers: {\n          authorization: this._authorization,\n          \'Content-type\': \'application/json\'\n        }\n      }).then(this._handleResponse);\n    }\n\n    //принимает имя и статус и отправляет его на сервер\n  }, {\n    key: "setUserId",\n    value: function setUserId(newUserName, newUserStatus) {\n      return fetch("".concat(this._url, "/users/me"), {\n        method: \'PATCH\',\n        headers: {\n          authorization: this._authorization,\n          \'Content-Type\': \'application/json\'\n        },\n        body: JSON.stringify({\n          name: newUserName,\n          about: newUserStatus\n        })\n      }).then(this._handleResponse);\n    }\n  }, {\n    key: "getAppInfo",\n    value: function getAppInfo() {\n      //возвращаю массив промисов. Первыми - карточки, вторым запрос к информации о пользователе\n      return Promise.all([this.getCards(), this.getUserId()]);\n    }\n  }, {\n    key: "deleteCard",\n    value: function deleteCard(cardId) {\n      return fetch("".concat(this._url, "/cards/").concat(cardId), {\n        method: \'DELETE\',\n        headers: {\n          authorization: this._authorization,\n          \'Content-Type\': \'application/json\'\n        }\n      }).then(this._handleResponse);\n    }\n  }, {\n    key: "putLike",\n    value: function putLike(cardId) {\n      return fetch("".concat(this._url, "/cards/").concat(cardId, "/likes"), {\n        method: \'PUT\',\n        headers: {\n          authorization: this._authorization,\n          \'Content-Type\': \'application/json\'\n        }\n      }).then(this._handleResponse);\n    }\n  }, {\n    key: "deleteLike",\n    value: function deleteLike(cardId) {\n      return fetch("".concat(this._url, "/cards/").concat(cardId, "/likes"), {\n        method: \'DELETE\',\n        headers: {\n          authorization: this._authorization,\n          \'Content-Type\': \'application/json\'\n        }\n      }).then(this._handleResponse);\n    }\n\n    //принимает ссылку на новый аватар и отправляет его на сервер\n  }, {\n    key: "setAvatar",\n    value: function setAvatar(newAvatarLink) {\n      return fetch("".concat(this._url, "/users/me/avatar"), {\n        method: \'PATCH\',\n        headers: {\n          authorization: this._authorization,\n          \'Content-Type\': \'application/json\'\n        },\n        body: JSON.stringify({\n          avatar: newAvatarLink\n        })\n      }).then(this._handleResponse);\n    }\n  }]);\n  return Api;\n}();\n\n;// CONCATENATED MODULE: ./src/pages/index.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\n\n\n // добавьте импорт главного файла стилей\n\n//=====POPUP DELETE CONFIRMATION=====\nvar confirmPopUp = new PopupWithConfirmation(\'.popup-delete-confirmation\');\nconfirmPopUp.setEventListeners();\n\n//=====API=====\nvar api = new Api({\n  url: \'https://mesto.nomoreparties.co/v1/cohort-68\',\n  headers: {\n    authorization: \'752cb7e1-403b-438a-9b48-05f4c5ae9d75\'\n  }\n});\n\n//=====GENERAL: MAKE AN INSTANCE OF A CARD=====\n\n//делаем отдельную функцию по созданию экземпляра класса Card\nfunction makeElementOfClassCard(data) {\n  var card = new Card(data, {\n    handleCardClick: function handleCardClick(cardData) {\n      popUpBigPhoto.open(cardData);\n    }\n  }, {\n    confirmDelete: function confirmDelete() {\n      confirmPopUp.open();\n      confirmPopUp.handleSubmitCallback(function () {\n        api.deleteCard(data._id).then(function () {\n          card.handleTrashCanToRemoveCard();\n        }).catch(function (err) {\n          console.log(\'Что-то пошло не так\', err);\n        });\n        confirmPopUp.close();\n      });\n    }\n  }, {\n    putHeartToLike: function putHeartToLike() {\n      api.putLike(data._id).then(function (res) {\n        card.showLikesCounter().textContent = res.likes.length;\n        card.showHeartToLike().classList.add(\'card__heart_active\');\n      }).catch(function (err) {\n        console.log(\'Что-то пошло не так\', err);\n      });\n    }\n  }, {\n    deleteHeartToLike: function deleteHeartToLike() {\n      api.deleteLike(data._id).then(function (res) {\n        card.showLikesCounter().textContent = res.likes.length;\n        card.showHeartToLike().classList.remove(\'card__heart_active\');\n      }).catch(function (err) {\n        console.log(\'Что-то пошло не так\', err);\n      });\n    }\n  });\n  var cardElement = card.generateCard();\n\n  // значение счетчика лайков равно длине массива тех, кто лайкнул\n  card.showLikesCounter().textContent = data.likes.length;\n  return cardElement;\n}\n\n//=====RENDER ALL SERVER CARDS=====\n\nvar section = {};\n//с помощью классов Section и Card отрисовываем все карточки изначального массива [apiCards], который получен с сервера через API\napi.getAppInfo().then(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    apiCards = _ref2[0],\n    usersId = _ref2[1];\n  section = new Section({\n    items: apiCards.reverse(),\n    renderer: function renderer(data) {\n      var cardElement = makeElementOfClassCard(data);\n\n      // если карточка не моя, значит айди ее собственника не равно моему айди\n      if (data.owner._id === usersId._id) {\n        //убираем с класса мусорной корзинки аттрибут display: none\n        makeTrashCanVisible(cardElement);\n      }\n\n      //лайкнутая мною карточка должна иметь активное сердечко после перезагрузки страницы\n      data.likes.forEach(function (element) {\n        if (element._id.includes(usersId._id)) {\n          makeHeartToLikeActive(cardElement);\n        }\n      });\n      section.addItem(cardElement);\n    }\n  }, ".cards");\n  section.renderItems();\n}).catch(function (err) {\n  console.log(\'Что-то пошло не так\', err);\n});\n\n//===== NEW CARD =====\n\n// создаем экземпляр класса Popup с селектором для New Card\nvar popUpNewCard = new PopupWithForm(\'.popup-newcard\', handleCardFormSubmit);\n//вызываем публичный метод setEventListeners из класса Popup\npopUpNewCard.setEventListeners();\n//обработчик клика по кнопке addButton\naddButton.addEventListener(\'click\', function () {\n  popUpNewCard.open();\n});\n\n// функция сабмита/отправки формы новой карты. Аргумент cardInfo - объект с двумя полями name и link\nfunction handleCardFormSubmit(cardInfo) {\n  popUpNewCard.renderLoading(true);\n  //отправляем карточку на сервер\n  api.setCard(cardInfo.name, cardInfo.link).then(function (res) {\n    //создаем карточку\n    var element = makeElementOfClassCard(res);\n    //показываем на ней корзинку\n    makeTrashCanVisible(element);\n    // методом addItem класса Section добавляем эту одну созданную карточку на страницу\n    section.addItem(element);\n  }).catch(function (err) {\n    "catch: ".concat(err);\n  }).finally(function () {\n    popUpNewCard.renderLoading(false);\n  });\n  popUpNewCard.close();\n}\n\n//=====BIG PHOTO=====\n\n//создаем экземпляр класса Popup с селектором для большого фото\nvar popUpBigPhoto = new PopupWithImage(\'.popup-big-photo\');\n//вызываем публичный метод setEventListeners из класса Popup\npopUpBigPhoto.setEventListeners();\n\n//=====PROFILE=====\n\n//экземпляр класса UserInfo с текущими пустыми значениями name и about из html\nvar infoAboutUser = new UserInfo(currentName, currentStatus);\n\n// создаем экземпляр класса Popup с селектором для Profile\nvar popUpProfileInstance = new PopupWithForm(\'.popup-profile\', handleProfileFormSubmit);\n// вызываем публичный метод setEventListeners из класса Popup, чтобы работало нажатие на крестик для закрывания окна\npopUpProfileInstance.setEventListeners();\n\n// обработчик клика по кнопке Edit\neditButton.addEventListener(\'click\', function () {\n  //передаем данные из _getInputValues в колбэк сабмита формы\n  var userInfo = infoAboutUser.getUserInfo();\n  nameInput.value = userInfo.name;\n  nameStatus.value = userInfo.about;\n  popUpProfileInstance.open();\n});\n\n//функция вставляет данные из заполненной формы попапа в профиль и закрывает попап\nfunction handleProfileFormSubmit(inputValues) {\n  popUpProfileInstance.renderLoading(true);\n  infoAboutUser.setUserInfo(inputValues);\n  // отправка данных на сервер\n  api.setUserId(inputValues.name, inputValues.about).catch(function (err) {\n    "catch: ".concat(err);\n  }).finally(function () {\n    popUpProfileInstance.renderLoading(false);\n  });\n  popUpProfileInstance.close();\n}\n\n//заполняем шапку данными с сервера\napi.getUserId().then(function (result) {\n  infoAboutUser.setUserInfo(result);\n  currentAvatar.src = result.avatar;\n}).catch(function (err) {\n  "catch: ".concat(err);\n});\n\n//=====PROFILE AVATAR=====\n\n//экземпляр класса с функцией замены аватара\nvar popUpToChangeAvatar = new PopupWithForm(\'.popup-change-avatar\', handleAvatarChangeSubmit);\npopUpToChangeAvatar.setEventListeners();\n\n// обработчик клика по карандашу\navatarLink.addEventListener(\'click\', function () {\n  popUpToChangeAvatar.open();\n});\n\n//функция вставляет данные из заполненной формы попапа в аватар и закрывает попап\nfunction handleAvatarChangeSubmit(avatarInfo) {\n  popUpToChangeAvatar.renderLoading(true);\n  api.setAvatar(avatarInfo.link).then(function (res) {\n    currentAvatar.src = res.avatar;\n  }).catch(function (err) {\n    "catch: ".concat(err);\n  }).finally(function () {\n    popUpToChangeAvatar.renderLoading(false);\n  });\n  popUpToChangeAvatar.close();\n}\n\n//=====ВАЛИДАЦИЯ форм=====\n\n//создаем экземпляр класса FormValidator для формы заполнения новой карточки\nvar cardFormValidator = new FormValidator(config, \'.popup__form_type_profile\');\n//запускаем проверку валидации этой формы через публичный метод класса\ncardFormValidator.enableValidation(config);\n//создаем экземпляр класса FormValidator для формы профайла\nvar profileFormValidator = new FormValidator(config, \'.popup__form_type_edit-card\');\n//запускаем проверку валидации этой формы через публичный метод класса\nprofileFormValidator.enableValidation(config);\n//создаем экземпляр класса FormValidator для формы смены аватара\nvar avatarFormValidator = new FormValidator(config, \'.popup__form_type_avatar\');\n//запускаем проверку валидации этой формы через публичный метод класса\navatarFormValidator.enableValidation(config);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///831\n')}},__webpack_exports__={};__webpack_modules__[831]()})();